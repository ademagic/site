---
import { getCollection } from 'astro:content';
import BlogCard from '../components/BlogCard.astro';
import Tag from '../components/Tag.astro';
import BaseLayout from '../layouts/BaseLayout.astro';

const title = 'Hi there!';
const description = 'UI Developer from Sydney, Australia.';
const permalink = Astro?.site?.href;

let allPosts = await getCollection('blog');
const NUMBER_OF_LATEST_POSTS = 3;
const latestPosts = allPosts.sort((a, b) => new Date(b.data.publishDate).valueOf() - new Date(a.data.publishDate).valueOf()).slice(0, NUMBER_OF_LATEST_POSTS);

---

<BaseLayout title={title} description={description} permalink={permalink}>
  <div class="home-container hero">
    <div class="home-copy">
      <h1 class="home">Hi, I'm Miko.</h1>
      <p class="home">I'm a <span class="emphasis">Design-focused UI developer</span> from Sydney, Australia.<br/>I like working on Design Systems, UX, Accessibility and generally <span class="emphasis">making good things for good people</span>.</p>
      <p class="home">Reach out on <a rel="me" href="https://indieweb.social/@ademagic">the Elephant</a>, <a href="https://twitter.com/miko_a">the Bird</a>, or <a href="https://github.com/ademagic">the Octocat</a>. Or even <a href="https://linkedin.com/in/mikoademagic">the LinkedIn</a>.</p>
    </div>

    <!-- <div class="hero-image-container">
      <picture>
        <source srcset="/assets/home-illustration.webp" media="(min-width: 600px)">
        <img class="hero-image" alt="Illustration of person reading a book" src="/assets/home-illustration-small.webp" width="550" height="466">
      </picture>
    </div> -->
  </div>

  <div class="home-container latest">
    <div class="home-copy">
      <h2 class="home">Latest From The Blog</h2>
      <div class="grid">
        {latestPosts.map((post) => {
          const href = `/blog/${post.slug}`;
          const postImage = (post.data.socialImage !== undefined) ? post.data.socialImage : 'assets/social.jpg';
          const socialImageAlt = (post.data.socialImageAlt !== undefined) ? post.data.socialImageAlt : `alt text is missing for ${post.data.title} social image. Please let me know.`;

          return (
            <BlogCard
              href={href}
              title={post.data.title}
              description={post.data.description}
              publishDate={post.data.publishDate}
            >
              <img class="post-image" slot="postImage" src={`/${postImage}`} alt={socialImageAlt} />
            </BlogCard>
          )
        })}
      </div>
      <p class="home"><a href="/blog">Browse the Blog ‚ü∂</a></p>
    </div>
  </div>
</BaseLayout>

<style>
  .home-container {
    align-items: center;
    display: flex;
    flex: 1;
    justify-content: center;
    margin: 2em 0;
    min-height: 400px;
  }

  .hero {
    min-height: 75vh;
  }

  .home-copy {
    flex: 1;
    padding: 0 1em;
  }

  h1.home {
    font-weight: 700;
    margin-bottom: 0.5em;
    line-height: 1.3;
  }
  h2.home {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 0.5em;
    line-height: 1.3;
  }

  p.home {
    font-size: 1.4em;
  }

  .emphasis {
    background-color: var(--primary-color);
    color: var(--text-highlight);
    padding-left: 0.2em;
    padding-right: 0.2em;
  }

  .grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    column-gap: 1.2rem;
    row-gap: 1.2rem;
  }

  .hero-image-container {
    margin: 0 1em;
    text-align: center;
  }

  .hero-image-container picture {
    display: block;
    min-height: 250px;
  }

  .caption {
    font-size: .8em;
    font-style: italic;
    text-align: left;
  }

  .hero-image {
    width: 100%;
    max-width: 550px;
    margin-bottom: 1em;
  }

  .latest p.home {
    text-align: right;
  }

  @media (max-width: 1200px) {
    p {
      font-size: 1.2em;
    }

    .hero-image {
      max-width: 400px;
    }
  }

  @media (max-width: 800px) {

    .hero {
      min-height: 50vh;
    }
    .home-container {
      flex-direction: column;
    }

    .home-copy {
      flex: 0;
      padding-bottom: 2em;
    }

    .grid {
      grid-template-columns: 1fr;
      grid-template-rows: 1fr 1fr;
    }
  }
</style>

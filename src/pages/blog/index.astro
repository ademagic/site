---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Tag from '../../components/Tag.astro';
import BlogCard from '../../components/BlogCard.astro';
import BlogCardLatest from '../../components/BlogCardLatest.astro';

import getTags from '../../utils/getTags';
import {diffMonth} from '../../utils/dateDiff';

const title = 'Blog';
const description = 'I mainly write about web development, management, and working in tech. But maybe you\'ll find something else, who knows?';
const permalink = `${Astro.site.href}blog`;

let allPosts = await getCollection('blog');

allPosts = allPosts.sort((a, b) => new Date(b.data.publishDate).valueOf() - new Date(a.data.publishDate).valueOf());

let {tagCount: tags} = getTags(allPosts.map(a => ({tags: a.data.tags})));

const sortedTags = Object.entries(tags).sort(([,va],[,vb]) => vb - va).slice(0,7).map(st => ({name: st[0], count: st[1]}));

const currentPosts = allPosts.map((post) => {
  if ((diffMonth(new Date(post.data.publishDate), new Date()) < 24) && !(post.data.tags.includes('release'))) {
    return post;
  }
}).filter(e => e !== undefined);

const latestPost = currentPosts[0];

const popTag = sortedTags[0].name;
const popTagList = currentPosts.map(post => { if (post.data.tags.includes(popTag)) {return post}}).filter(e => e!== undefined).slice(0,3);

---

<BaseLayout title={title} description={description} permalink={permalink} current="blog">
  <div class="container wide">
    <h1>Blog</h1>
    <p>{description}</p>
    <div class="tag-list">
      <h3>Top tags</h3>
      <ul>
        {
          sortedTags.map(tag => <li><Tag text={tag.name} link={`/tags/${tag.name}`} /></li>)
        }
        <li>
          <a href="/tags">Browse by tags ⟶</a>
        </li>
      </ul>
    </div>
    
    <h2>Latest Posts</h2>
    <div class="latest">
      {(post = latestPost) => {
        const href = `/blog/${post.slug}`;
        const postImage = (post.data.socialImage !== undefined) ? post.data.socialImage : 'assets/social.jpg';
        const socialImageAlt = (post.data.socialImageAlt !== undefined) ? post.data.socialImageAlt : `alt text is missing for ${post.data.title} social image. Please let me know.`;

        return (
          <BlogCardLatest
            href={href}
            title={post.data.title}
            description={post.data.description}
            publishDate={post.data.publishDate}
          >
            <img class="post-image" slot="postImage" src={`/${postImage}`} alt={socialImageAlt} />
          </BlogCardLatest>
        )
      }}
    </div>

    <h2>I mostly write about <a href={`/tags/${popTag}`}>{popTag}</a></h2>
    <div class="grid">
      {popTagList.map((post) => {
        const href = `/blog/${post.slug}`;
        const postImage = (post.data.socialImage !== undefined) ? post.data.socialImage : 'assets/social.jpg';
        const socialImageAlt = (post.data.socialImageAlt !== undefined) ? post.data.socialImageAlt : `alt text is missing for ${post.data.title} social image. Please let me know.`;

        return (
          <BlogCard
            href={href}
            title={post.data.title}
            description={post.data.description}
            publishDate={post.data.publishDate}
          >
            <img class="post-image" slot="postImage" src={`/${postImage}`} alt={socialImageAlt} />
          </BlogCard>
        )
      })}
    </div>

    <h2>Blogposts</h2>
      {currentPosts.map((post) => {
        const href = `/blog/${post.slug}`;

        return (
          <p class="blogpost">{post.data.publishDate}: <a href={href}>{post.data.title}</a></p>
        )
      })}
    <p>If you'd like to read my older posts, you can <a href="/blog/archive">browse the archive ⟶</a></p>
  </div>
</BaseLayout>

<style>
  .post-item-footer {
    font-family: var(--font-family-sans);
    font-weight: 700;
  }

  .post-item-date {
    color: var(--text-secondary);
    text-align: left;
    text-transform: uppercase;
    margin-right: 16px;
  }

  .tag-list {
    margin-bottom: 1.2rem;
  }

  .tag-list > h3 {
    margin-bottom: 1.2rem;
  }

  hr {
    margin: 60px auto;
  }
  ul {
    margin: 0;
    padding: 0;
  }

  li {
    display: inline-block;
    margin: 0 0 0.5em 0.5em;
  }

  li a {
    font-size: 1rem;
    font-family: var(--font-family-sans);
    text-decoration: none;
  }

  h2 {
    margin-bottom: 1.2em;
  }

  .blogpost {
    margin: 0.2em 0;
  }

  .grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    column-gap: 1.2rem;
    row-gap: 1.2rem;
  }

  @media (max-width: 800px) {

    .grid {
      grid-template-columns: 1fr;
      grid-template-rows: 1fr 1fr;
    }
  }
</style>

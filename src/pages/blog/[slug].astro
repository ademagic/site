---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Bio from '../../components/Bio.astro';
import Foreword from '../../components/Foreword.astro';
import getPostData from '../../utils/getPostData';
import Tag from '../../components/Tag.astro';
import SpotifyEmbed from '../../components/SpotifyEmbed.astro';

const post = Astro.props.post;

const {
  title,
  description,
  publishDate,
  foreword,
  tags,
  nextPost,
  socialImageCaption,
  socialImage,
  socialImageAlt,
  socialImageAttribution,
  soundtrack 
} = post.data;

const { slug, readingTime } = getPostData({
  title,
  slug: post.slug,
  body: post.body,
});

export async function getStaticPaths() {
  let posts = await getCollection('blog');
  return posts.map(p => {
    const coreTag = p.data.coreTag;
    const thisPost = p.data.title;
    const relatedPostsTag = (coreTag !== undefined) ? coreTag : p.data.tags[0];
    return ({
      params: { slug: p.slug },
      props: {
        post: p,
        relatedPosts:  posts.filter(post => (post.data.tags.includes(relatedPostsTag) && post.data.title !== thisPost))
       },
    }
  )});
}

const permalink = `${Astro?.site?.href}/blog/${slug}`;
const relatedPosts = Astro.props.relatedPosts.slice(0, 3);
const {Content} = await post.render();

---

<BaseLayout title={title} description={description} permalink={permalink} current="blog" socialImage={socialImage}>
  <header>
    <p>{publishDate} ~ {readingTime}</p>
    <h1>{title}</h1>
    {tags &&
      <div>Tagged with <ul>{tags.map(tag => <li><Tag text={tag} link={`/tags/${tag}`}/></li>)}</ul></div>
    }
    {soundtrack && <SpotifyEmbed link={soundtrack} />}
    {
      socialImage &&
      <figure>
        <img
          alt={(socialImageAlt !== undefined) ? socialImageAlt : `Alt text missing for ${title}. Please reach out and let me know.`}
          src={`/${socialImage}`}
        />
        <figcaption>
          {socialImageCaption && <p>{socialImageCaption}</p>}
          {
            socialImageAttribution && <p>Photo by <a href={socialImageAttribution.authorUrl}>{socialImageAttribution.author}</a> on <a href={socialImageAttribution.sourceUrl}>{socialImageAttribution.source}</a></p>
          }
        </figcaption>
      </figure>
    }
  </header>
  <div class="container">
    <article class="content">
      {
        foreword &&
        <Foreword>
          {foreword}
        </Foreword>
      }
      <Content />
    </article>
    <hr />
    <div class="related">
      <div class="left">{relatedPosts && 
        <span>Related Posts</span>
        <ul>
          {
            relatedPosts.map(p => (
              <li>
                <p>
                  <a href={`/blog/${p.slug}`}>{p.data.title}</a>
                </p>
              </li>
            ))
          }
        </ul>}
      </div>
      <div class="right">
        {
          nextPost && 
          <div>
            <span>Next post</span>
            <p><a href={nextPost.slug}>{nextPost.title}</a></p>
          </div>
        }
      </div>
    </div>
    <hr />

    <Bio />
  </div>
</BaseLayout>

<style>
  header {
    text-align: center;
  }

  header h1 {
    margin-bottom: 0.7em;
  }

  header p {
    color: var(--text-secondary);
    text-transform: uppercase;
    font-family: var(--font-family-sans);
    font-weight: 600;
  }

  header a {
    background-color: var(--code-text);
    color: var(--code-body);
    margin: 0 0 0.5em 0.5em;
    padding: 0.2em 0.5em;
    border-radius: 4px;
    box-shadow: none;
  }

  header hr {
    min-width: 100px;
    width: 40%;
  }

  figure {
    margin-left: -3em;
    margin-right: -3em;
  }
  figure img {
    width: 80%;
  }

  figcaption p {
    font-size: 1rem;
    text-transform: none;
  }

  figcaption a,
  figcaption a:hover {
    background-color: initial;
    color: inherit;
    padding: 0;
    margin: initial;
    text-decoration: underline;
  }

  figcaption a:hover {
    color: var(--primary-color);
    box-shadow: unset;
  }

  ul {
    margin: 0;
    padding: 0;
    display: inline;
  }

  li {
    display: inline-block;
    margin: 0 0 0.5em 0.5em;
  }
  
  .related {
    display: grid;
    grid-template-columns: 1fr 1fr;
    margin-bottom: 1rem;
  }

  .related .left *,
  .related .right * {
    font-size: 1em;
  }

  .related .right {
    text-align: right;
  }

  .related li {
    display: list-item;
  }

  .related span {
    font-weight: bold;
  }

</style>

---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogCard from '../../components/BlogCard.astro';

import {diffMonth, diffYear} from '../../utils/dateDiff';

const title = 'Blog Archive';
const description = 'Tech can age very quickly. Any post over 2 years old is taken off the blog page and retires here for your nostalgic reading enjoyment.';
const permalink = `${Astro.site.href}blog/archive`;

let allPosts = await getCollection('blog');
allPosts = allPosts.sort((a, b) => new Date(b.data.publishDate).valueOf() - new Date(a.data.publishDate).valueOf());
const archivedPosts = allPosts.map((post) => {
  if (diffMonth(new Date(post.data.publishDate), new Date()) > 24) {
    return post;
  }
}).filter(e => e !== undefined);


---

<BaseLayout title={title} description={description} permalink={permalink} current="blog">
  <div class="container wide">
    <h1>Blog</h1>
    <p>{description}</p>
    <p>You can still find these posts by <a href="/tags">browsing by tag</a>.</p>
    <div class="grid">
      {archivedPosts.map((post) => {
        const href = `/blog/${post.slug}`;
        if (post.data.tags.includes('release')) return false;
        const postImage = (post.data.socialImage !== undefined) ? post.data.socialImage : 'assets/social.jpg';
        const socialImageAlt = (post.data.socialImageAlt !== undefined) ? post.data.socialImageAlt : `alt text is missing for ${post.data.title} social image. Please let me know.`;

        return (
          <BlogCard
            href={href}
            title={post.data.title}
            description={post.data.description}
            publishDate={`${post.data.publishDate} (${diffYear(new Date(post.data.publishDate), new Date())} years old)`}
          >
            <img class="post-image" slot="postImage" src={`/${postImage}`} alt={socialImageAlt} />
          </BlogCard>
        )
      })}
    </div>
    <p class="home"><a href="/blog">Back to the Blog ‚ü∂</a></p>
  </div>
</BaseLayout>

<style>
  .post-item-footer {
    font-family: var(--font-family-sans);
    font-weight: 700;
  }

  .post-item-date {
    color: var(--text-secondary);
    text-align: left;
    text-transform: uppercase;
    margin-right: 16px;
  }

  hr {
    margin: 60px auto;
  }
  ul {
    margin: 0;
    padding: 0;
  }

  li {
    display: inline-block;
    margin: 0 0 0.5em 0.5em;
  }

  li a {
    font-size: 1rem;
    font-family: var(--font-family-sans);
    text-decoration: none;
  }

  h2 {
    margin-bottom: 1.2em;
  }
  .grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    column-gap: 1.2rem;
    row-gap: 1.2rem;
  }

  @media (max-width: 800px) {

    .grid {
      grid-template-columns: 1fr;
      grid-template-rows: 1fr 1fr;
    }
  }
</style>

---
import BaseLayout from '../../layouts/BaseLayout.astro';
import getTags from '../../utils/getTags';

import Tag from '../../components/Tag.astro';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../../data/blog-posts/*.md');
  let {tags: tagList} = getTags(allPosts.map(a => ({tags: a.frontmatter.tags})));

  return tagList.map(t => ({
    params: { slug: t },
    props: { 
      postList: allPosts.filter(post => (post.frontmatter.tags.includes(t)))
    },
  }));
}

const { slug } = Astro.params;
const { frontmatter } = Astro.props;
const postList = Astro.props.postList.sort((a, b) => new Date(b.frontmatter.publishDate).valueOf() - new Date(a.frontmatter.publishDate).valueOf())
const title = `Tag: ${slug}`
const permalink = `${Astro.site.href}tags/${slug}`;
---

<BaseLayout title={title} description={`${postList.length} posts tagged with ${slug}`} permalink={permalink} current="blog">
  <div class="container">
    <div class="container">
      <h1>{title}</h1>
      <p>{postList.length} posts tagged with <Tag text={slug} /></p>
      <p><a href="/tags">&lt; Back to Tags</a></p>
      {postList.map((post, index) => {
        const href = `/blog/${post.file.split('/').pop().split('.').shift()}`;
        return (
          <div>
            { index !== 0 && <hr /> }
            <div class="post-item">
              <h2>
                <a href={href}>{post.frontmatter.title}</a>
              </h2>
              <p>{post.frontmatter.description}</p>
              <div class="post-item-footer">
                <span class="post-item-date">â€” {post.frontmatter.publishDate}</span>
              </div>
            </div>
          </div>
        )
      })}
    </div>
  </div>
</BaseLayout>

<style>
  header {
    text-align: center;
  }

  header h1 {
    margin-bottom: 0.7em;
  }

  header p {
    color: var(--text-secondary);
    text-transform: uppercase;
    font-family: var(--font-family-sans);
    font-weight: 600;
  }

  header hr {
    min-width: 100px;
    width: 30%;
  }
</style>
